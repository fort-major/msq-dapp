type InitArgs = record {
    offset : nat64;
    parent : principal;
};

type InvoiceId = blob;
type ShopId = nat64;
type Timestamp = nat64;
type USD = nat;
type TokenId = principal;
type RawShopCertificate = blob;
type CorrelationId = blob;

type PaidInvoice = record {
    id : InvoiceId;
    shop_id : ShopId;
    correlation_id : CorrelationId;

    created_at : Timestamp;
    paid_at : Timestamp;

    exchange_rates_timestamp : Timestamp;
    exchange_rate : USD;
    qty_usd : USD;

    token_id : TokenId;
    qty : nat;
};

type PushBatchRequest = record {
    batch : vec PaidInvoice;
};

type GetInvoiceRequest = record {
    idx : nat64;
    shop_cert : RawShopCertificate;
};

type GetInvoiceResponse = variant {
    Ok : PaidInvoice;
    Err : principal;
};

type SetNextRequest = record {
    next : principal;
};

service : (InitArgs) -> {
    "push_batch" : (PushBatchRequest) -> ();
    "get_invoice" : (GetInvoiceRequest) -> (GetInvoiceResponse) query;
    "set_next" : (SetNextRequest) -> ();
};