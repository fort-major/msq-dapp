type Token = record {
    id : principal;
    ticker : Ticker;
    decimals : nat8;
    fee : nat;
};

type InvoiceStatus = variant {
    Created : record { ttl : nat8; };
    Paid : record { timestamp : Timestamp; token_id : principal; qty : nat; exchange_rate : USD; };
};

type InvoiceId = blob;
type USD = nat;
type Timestamp = nat64;
type ShopId = nat64;
type ShopCertificate = blob;
type PayCertificateChain = vec blob;
type ErrorCode = nat16;
type Ticker = text;
type CorrelationId = blob;

type Invoice = record {
    state : InvoiceStatus;
    qty_usd : USD;
    created_at : nat64;
    shop_id : ShopId;
    exchange_rates_timestamp : Timestamp;
    correlation_id : CorrelationId;
    is_notified : bool;
};

type InitArgs = record {
    supported_tokens : vec Token;
};

type GetExchangeRatesRequest = record {
    timestamp : Timestamp;
};

type GetExchangeRatesResponse = record {
    rates : opt vec record { text; nat; };
};

type GetSupportedTokensResponse = record {
    supported_tokens : vec Token;
};

type AddSupportedTokenRequest = record {
    token : Token;
};

type RemoveSupportedTokenRequest = record {
    ticker : Ticker;
};

type GetInvoiceRequest = record {
    invoice_id : InvoiceId;
};

type GetInvoiceResponse = record {
    invoice_opt : opt Invoice;
};

type CreateInvoiceRequest = record {
    qty_usd : USD;
    shop_cert : ShopCertificate;
};

type CreateInvoiceResponse = record {
    invoice_id : InvoiceId;
};

type PayRequest = record {
    invoice_id : InvoiceId;
    cert_chain : PayCertificateChain;
};

type PayResponse = variant {
    Ok : Invoice;
    Err : ErrorCode;
};

service : (InitArgs) -> {
    "get_exchange_rates" : (GetExchangeRatesRequest) -> (GetExchangeRatesResponse) query;
    
    "get_supported_tokens" : () -> (GetSupportedTokensResponse) query;
    "add_supported_token" : (AddSupportedTokenRequest) -> ();
    "remove_supported_token" : (RemoveSupportedTokenRequest) -> () query;
    
    "get_invoice" : (GetInvoiceRequest) -> (GetInvoiceResponse) query;
    "create_invoice" : (CreateInvoiceRequest) -> (CreateInvoiceResponse);
    "pay" : (PayRequest) -> (PayResponse)
};